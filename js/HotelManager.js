localStorage.setItem("hotelAdminAuthToken", JSON.stringify("eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyUm9sZSI6ImhvdGVsQWRtaW4iLCJzdWIiOiJob3RlbGFkbWluIiwiaWF0IjoxNjk4MjMwNjMwLCJleHAiOjQ4NTE4MzA2MzB9.miSJLscg-rgKac48IXHVCoHAEqzmyjYkCC-4pvS_xoM"));

var packageIDs = [];
var packageNames = [];
$(document).ready(() => {

    let auth = {
        "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
    }
    axios.get("http://localhost:8083/getAllPackageIDs", {headers: auth})
        .then((res) => {
            packageIDs = res.data;

        })
        .catch(() => {
            swal("OOPS!", "Something went wrong while fetching PIDs!", "error")
        })

    axios.get("http://localhost:8083/getPackages", {headers: auth})
        .then((res) => {
            packageNames = res.data;

        })
        .catch((error) => {
            swal("OOPS!", "Something went wrong while fetching Packages!", "error")

        })


});

function changeTitle(title) {
    if (title === 'Home.') {
        return window.location.reload();

    }
    document.title = title;
}

$("#home").on("click", () => {
    window.location.reload();
})

$("#logout").on("click", () => {
    window.location.href = "adminLogin.html";
});
var isFormsVisible = false;
var isTableVisible = false;
$("#guideManager").on("click", () => {


    $(".mainContent").css("display", "none");
    if (!isFormsVisible) {
        $("body").append("<div id='forms' class='flexContainer marginAdder'>" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelId\" class=\"form-label\">Hotel ID.</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"hotelId\" placeholder=\"Generated by the server.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + " <div class=\"mb-3\">\n" + "  <label for=\"packageId\" class=\"form-label\">Package ID.</label>\n" + "  <select class=\"form-select\" id=\"packageId\">\n" + "  </select>\n" + "</div>\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelName\" class=\"form-label\">Hotel Name.</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"hotelName\" placeholder=\"Hilton Colombo.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelCategory\" class=\"form-label\">Hotel Category.</label>\n" + "  <select class=\"form-select\" id=\"hotelCategory\">\n" + "    " + "  </select>\n" + "</div>\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelLocation\" class=\"form-label\">Hotel Location.</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"hotelLocation\" placeholder=\"Colombo.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelLocationWithCoordinates\" class=\"form-label\">Hotel Location With Coordinates</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"hotelLocationWithCoordinates\" placeholder=\"\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelImageLocation\" class=\"form-label\">Hotel Image.</label>\n" + "  <input type=\"file\" class=\"form-control\" id=\"hotelImageLocation\" placeholder=\"\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelEmail\" class=\"form-label\">Hotel Email.</label>\n" + "  <input type=\"email\" class=\"form-control\" id=\"hotelEmail\" placeholder=\"contact@hilton.com\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelContact1\" class=\"form-label\">Hotel Contact 1.</label>\n" + "  <input type=\"tel\" class=\"form-control\" id=\"hotelContact1\" placeholder=\"Enter Contact Number 1.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelContact2\" class=\"form-label\">Hotel Contact 2.</label>\n" + "  <input type=\"tel\" class=\"form-control\" id=\"hotelContact2\" placeholder=\"Enter Contact Number 2.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"fullBoardWithACLuxuryRoomDouble\" class=\"form-label\">Full Board With AC Luxury Room Double.</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"fullBoardWithACLuxuryRoomDouble\" placeholder=\"Enter Amount in LKR.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"halfBoardWithACLuxuryRoomDouble\" class=\"form-label\">Half Board With AC Luxury Room Double.</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"halfBoardWithACLuxuryRoomDouble\" placeholder=\"Enter Amount in LKR.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"fullBoardWithACLuxuryRoomTriple\" class=\"form-label\">Full Board With AC Luxury Room Triple.</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"fullBoardWithACLuxuryRoomTriple\" placeholder=\"Enter Amount in LKR.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"halfBoardWithACLuxuryRoomTriple\" class=\"form-label\">Half Board With AC Luxury Room Triple.</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"halfBoardWithACLuxuryRoomTriple\" placeholder=\"Enter Amount in LKR.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + " <div class=\"mb-3\">\n" + "  <label for=\"isPetsAllowed\" class=\"form-label\">Is Pets Allowed?</label>\n" + "  <select class=\"form-select\" id=\"isPetsAllowed\">\n" + "    <option value=\"true\">True</option>\n" + "    <option value=\"false\">False</option>\n" + "  </select>\n" + "</div>\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"hotelFee\" class=\"form-label\">Hotel Fee.</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"hotelFee\" placeholder=\"Enter Amount in LKR.\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"cancellationCriteria\" class=\"form-label\">Cancellation Criteria.</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"cancellationCriteria\" placeholder=\"\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"remarks\" class=\"form-label\">Remarks.</label>\n" + "  <input type=\"text\" class=\"form-control\" id=\"remarks\" placeholder=\"\">\n" + "</div>\n" + "<div class=\"mb-3\">\n" + "  <label for=\"starRating\" class=\"form-label\">Star Rating</label>\n" + "  <input type=\"number\" class=\"form-control\" id=\"starRating\" placeholder=\"Enter star rating (1-5).\">\n" + "</div>\n" +

            "<button type=\"button\" id='saveHotel' class=\"btn btn-success\">Save Hotel.</button>\n" + "<button type=\"button\" id='updateHotel' class=\"btn btn-primary\">Update Hotel.</button>\n" + "<button type=\"button\" id='deleteHotel' class=\"btn btn-danger\">Delete Hotel.</button>\n" + "<button type=\"button\" id='clearButton' class=\"btn btn-info\">Clear.</button>\n" +

            "</div>");


        isFormsVisible = true;
        $("#packageId").prop("disabled", true);
        $("#hotelTable").css("display", "none");
        isTableVisible = false;


    }
    setPackageIDs();
    setPackageNames();
    $("#hotelId").prop("disabled", true);


});
var hCategory = '';
var isPetsAllowedOrNot = '';
var pId = '';
$(document).ready(() => {
    $(document).on("click", "#hotelCategory", () => {
        hCategory = $("#hotelCategory").val();

    })
    $(document).on("click", "#isPetsAllowed", () => {
        console.log($("#isPetsAllowed").val())
        hCategory = $("#isPetsAllowed").val();

    })
    $(document).on("click", "#packageId", () => {
        pId = $("#packageId").val();
        console.log($("#packageId").val())
        console.log("package id clicked" + $("#packageId").val())


    })
    $(document).on("click", "#hotelCategory", () => {
        var index = getIndex($("#hotelCategory").val());
        $("#packageId").val(packageIDs[index]);
        console.log("Index : " + index)


    })
});
var hcl = '';
$(document).ready(() => {

    $(document).on("click", "#saveHotel", () => {
        if (!validator()) {
            return swal("Operation failed!", "Please fill all the fields!", "error")


        }

        saveImage();
        setTimeout(() => {
            let hotel = {
                hotelId: "",
                packageId: $("#packageId").val(),
                hotelName: $("#hotelName").val(),
                hotelCategory: $("#hotelCategory").val(),
                hotelLocation: $("#hotelLocation").val(),
                hotelLocationWithCoordinates: $("#hotelLocationWithCoordinates").val(),
                hotelImageLocation: hcl,
                hotelContactEmail: $("#hotelEmail").val(),
                hotelContact1: $("#hotelContact1").val(),
                hotelContact2: $("#hotelContact2").val(),
                fullBoardWithACLuxuryRoomDouble: $("#fullBoardWithACLuxuryRoomDouble").val(),
                halfBoardWithACLuxuryRoomDouble: $("#halfBoardWithACLuxuryRoomDouble").val(),
                fullBoardWithACLuxuryRoomTriple: $("#fullBoardWithACLuxuryRoomTriple").val(),
                halfBoardWithACLuxuryRoomTriple: $("#halfBoardWithACLuxuryRoomTriple").val(),
                petsAllowed: $("#isPetsAllowed").val(),
                hotelFee: $("#hotelFee").val(),
                cancellationCriteria: $("#cancellationCriteria").val(),
                remarks: $("#remarks").val(),
                starRating: $("#starRating").val()

            }

            $.ajax({
                url: "http://localhost:8081/saveHotel", method: "POST", headers: {
                    "content-type": "application/json",
                    "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
                }, data: JSON.stringify(hotel), success: (response) => {
                    if (response.statusCode === 200 || response.statusCode === 201) {
                        swal("Done!", response.message, "success")
                        return clearFields();

                    } else {
                        return swal("OOPS!", response.message, "error")

                    }


                }, error: (xhr, textStatus, errorThrown) => {
                    swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
                },


            })

        }, 5000)


    })

});

function saveImage() {
    var formData = new FormData();
    var file = $('#hotelImageLocation')[0].files[0];
    formData.append('imageFile', file);

    $.ajax({
        url: 'http://localhost:8090/uploadToDrive', type: 'POST', data: formData, headers: {
            "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
        }, async: false, cache: false, contentType: false, processData: false, success: function (data) {

            hcl = data.data;
            console.log("IMG : " + hcl)


        }, error: (xhr, textStatus, errorThrown) => {
            swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
        }
    });

}

function clearFields() {
    $("#hotelId").val("");
    $("#packageId").val("");
    $("#hotelName").val("");
    $("#hotelCategory").val("");
    $("#hotelLocation").val("");
    $("#hotelLocationWithCoordinates").val("");
    $("#hotelImageLocation").val("");
    $("#hotelEmail").val("");
    $("#hotelContact1").val("");
    $("#hotelContact2").val("");
    $("#fullBoardWithACLuxuryRoomDouble").val("");
    $("#halfBoardWithACLuxuryRoomDouble").val("");
    $("#fullBoardWithACLuxuryRoomTriple").val("");
    $("#halfBoardWithACLuxuryRoomTriple").val("");
    $("#isPetsAllowed").val("");
    $("#hotelFee").val("");
    $("#cancellationCriteria").val("");
    $("#remarks").val("");
    $("#starRating").val("");
}

function validator() {
    if ($("#packageId").val() === "" || $("#hotelName").val() === "" || $("#hotelCategory").val() === "" || $("#hotelLocation").val() === "" || $("#hotelLocationWithCoordinates").val() === "" || $("#hotelImageLocation").val() === "" || $("#hotelEmail").val() === "" || $("#hotelContact1").val() === "" || $("#hotelContact2").val() === "" || $("#fullBoardWithACLuxuryRoomDouble").val() === "" || $("#halfBoardWithACLuxuryRoomDouble").val() === "" || $("#fullBoardWithACLuxuryRoomTriple").val() === "" || $("#halfBoardWithACLuxuryRoomTriple").val() === "" || $("#isPetsAllowed").val() === "" || $("#hotelFee").val() === "" || $("#cancellationCriteria").val() === "" || $("#remarks").val() === "") {
        return false;
    }
    return true;


}

$(document).ready(() => {


    $(document).on("click", "#clearButton", () => {
        clearFields();
    })
})
$(document).ready(() => {
    $(document).on("click", "#updateHotel", () => {
        if (!validator()) {
            return swal("Operation failed!", "Please fill all the fields!", "error")

        }
        saveImage();
        setTimeout(() => {
            console.log("Is pets allowed : " + $("#isPetsAllowed").val())
            let hotel = {
                hotelId: $("#hotelId").val(),
                packageId: $("#packageId").val(),
                hotelName: $("#hotelName").val(),
                hotelCategory: $("#hotelCategory").val(),
                hotelLocation: $("#hotelLocation").val(),
                hotelLocationWithCoordinates: $("#hotelLocationWithCoordinates").val(),
                hotelImageLocation: hcl,
                hotelContactEmail: $("#hotelEmail").val(),
                hotelContact1: $("#hotelContact1").val(),
                hotelContact2: $("#hotelContact2").val(),
                fullBoardWithACLuxuryRoomDouble: $("#fullBoardWithACLuxuryRoomDouble").val(),
                halfBoardWithACLuxuryRoomDouble: $("#halfBoardWithACLuxuryRoomDouble").val(),
                fullBoardWithACLuxuryRoomTriple: $("#fullBoardWithACLuxuryRoomTriple").val(),
                halfBoardWithACLuxuryRoomTriple: $("#halfBoardWithACLuxuryRoomTriple").val(),
                petsAllowed: $("#isPetsAllowed").val(),
                hotelFee: $("#hotelFee").val(),
                cancellationCriteria: $("#cancellationCriteria").val(),
                remarks: $("#remarks").val(),
                starRating: $("#starRating").val()

            }
            console.log(hotel)
            $.ajax({
                url: "http://localhost:8081/updateHotel", method: "PUT", headers: {
                    "content-type": "application/json",
                    "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
                }, data: JSON.stringify(hotel), success: (response) => {
                    if (response.statusCode === 200 || response.statusCode === 201) {
                        swal("Done!", response.message, "success")
                        return clearFields();

                    } else {
                        return swal("OOPS!", response.message, "error")

                    }


                }, error: (xhr, textStatus, errorThrown) => {
                    swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
                },


            })

        }, 3000)

    })
})
$(document).ready(() => {
    $(document).on("keydown", "#hotelName", (event) => {

        if (event.key === 'Enter') {
            $.ajax({
                url: "http://localhost:8081/getHotelByHotelName?hotelName=" + $("#hotelName").val(),
                method: "GET",
                headers: {
                    "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
                },
                success: (res) => {


                    if (res.statusCode === 200 || res.statusCode === 201) {
                        $("#hotelId").prop("disabled", false);
                        $("#hotelId").val(res.data.hotelId);
                        $("#hotelId").prop("disabled", true);
                        $("#packageId").val(res.data.packageId);
                        $("#hotelName").val(res.data.hotelName);
                        $(document).ready(function () {
                            $("#hotelCategory option[value='" + res.data.hotelCategory + "']").remove();
                            $("#hotelCategory").append("<option value='" + res.data.hotelCategory + "'>" + res.data.hotelCategory + "</option>");
                            $("#hotelCategory option[value='" + res.data.hotelCategory + "']").attr('selected', 'selected');
                        });

                        $("#hotelLocation").val(res.data.hotelLocation);
                        $("#hotelLocationWithCoordinates").val(res.data.hotelLocationWithCoordinates);
                        $("#hotelEmail").val(res.data.hotelContactEmail);
                        $("#hotelContact1").val(res.data.hotelContact1);
                        $("#hotelContact2").val(res.data.hotelContact2);
                        $("#fullBoardWithACLuxuryRoomDouble").val(res.data.fullBoardWithACLuxuryRoomDouble);
                        $("#halfBoardWithACLuxuryRoomDouble").val(res.data.halfBoardWithACLuxuryRoomDouble);
                        $("#fullBoardWithACLuxuryRoomTriple").val(res.data.fullBoardWithACLuxuryRoomTriple);
                        $("#halfBoardWithACLuxuryRoomTriple").val(res.data.halfBoardWithACLuxuryRoomTriple);
                        $(document).ready(() => {
                            $("#isPetsAllowed option[value='" + res.data.petsAllowed + "']").remove();
                            $("#isPetsAllowed").append("<option value='" + res.data.petsAllowed + "'>" + res.data.petsAllowed + "</option>");
                            $("#isPetsAllowed option[value='" + res.data.petsAllowed + "']").attr('selected', 'selected');
                        })

                        $("#hotelFee").val(res.data.hotelFee);
                        $("#cancellationCriteria").val(res.data.cancellationCriteria);
                        $("#remarks").val(res.data.remarks);
                        $("#starRating").val(res.data.starRating);


                        return swal("Done!", res.message, "success");

                    }


                },
                error: (xhr, textStatus, errorThrown) => {
                    swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
                }


            });

        }


    })


});

function isValidLength(length) {
    return length >= 5;


}

function isExceedingLength(length) {
    return length > 10;
}

function isNegative(value) {
    return value < 0;

}

function isZero(value) {
    return value === 0;

}

function isValidPassword(value) {
    return value <= 8 && value >= 16;

}

function isContainingNumbers(value) {
    return /\d/.test(value)
}

function isEmpty(value) {
    return value === "";
}

/*Validation - Start.*/
$(document).ready(function () {
    $(document).on('mouseleave', "#hotelName", () => {
        var hn = $("#hotelName").val();
        if (isEmpty(hn)) {
           isInvalid("#hotelName");
            return swal("OOPS!", "Hotel Name cannot be empty!", "error");

        }else{
            isValid("#hotelName");

        }
        if (isNegative(hn) || isZero(hn)) {
            isInvalid('#hotelName');

            return swal("OOPS!", "Hotel Name cannot be negative or zero!", "error");

        }else{
            getCoordinates();
            isValid("#hotelName");
        }
        if (hn.length > 20) {
            isInvalid('#hotelName');
            return swal("OOPS!", "Hotel Name cannot exceed 20 characters!", "error");

        }else{
            isValid("#hotelName");
        }
        if (isContainingNumbers(hn)) {
            isInvalid('#hotelName')
            return swal("OOPS!", "Hotel Name cannot contain numbers!", "error");

        }else{
            isValid("#hotelName");

        }


    })
    $(document).on('mouseleave', "#hotelLocation", () => {
        var hl = $("#hotelLocation").val();
        if (isEmpty(hl)) {
            isInvalid("#hotelLocation");
            return swal("OOPS!", "Hotel Location cannot be empty!", "error");

        }else{
             isValid("#hotelLocation");
        }
        if (isNegative(hl) || isZero(hl)) {
            isInvalid("#hotelLocation");
            return swal("OOPS!", "Hotel Location cannot be negative or zero!", "error");




        }else{
            return isValid("#hotelLocation");
        }
        if (hl.length > 20) {
            isInvalid("#hotelLocation");
            return swal("OOPS!", "Hotel Location cannot exceed 20 characters!", "error");

        }else{
             isValid("#hotelLocation");
        }


    })
    $(document).on('mouseleave', "#hotelLocationWithCoordinates", () => {
        var hlwc = $("#hotelLocationWithCoordinates").val();
        if (isEmpty(hlwc)) {
            isInvalid("#hotelLocationWithCoordinates");
            return swal("OOPS!", "Hotel Location cannot be empty!", "error");


        }else{
           isValid("#hotelLocationWithCoordinates");
        }
        if (isNegative(hlwc) || isZero(hlwc)) {
            isInvalid("#hotelLocationWithCoordinates");
            return swal("OOPS!", "Hotel Location cannot be negative or zero!", "error");


        }else{
             isValid("#hotelLocationWithCoordinates");
        }


    })
    $(document).on("mouseleave", "#hotelEmail", () => {
        let he = $("#hotelEmail").val();
        if (isEmpty(he)) {
            isInvalid("#hotelEmail");
            return swal("OOPS!", "Hotel Email cannot be empty!", "error");

        }else{
             isValid("#hotelEmail")
        }
        if (isNegative(he) || isZero(he)) {
            isInvalid('#hotelEmail');
            return swal("OOPS!", "Hotel Email cannot be negative or zero!", "error");
        }else{
             isValid("#hotelEmail");
        }
        if (he.length > 20) {
            isInvalid("#hotelEmail");
            return swal("OOPS!", "Hotel Email cannot exceed 20 characters!", "error");
        }else{
             isValid("#hotelEmail");
        }
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(he)) {
            isInvalid('#hotelEmail');
            return swal("OOPS!", "Hotel Email is invalid!", "error");

        }else{
             isValid("#hotelEmail");
        }

    })
    $(document).on("mouseleave", "#hotelContact1", () => {
        let hc1 = $("#hotelContact1").val();
        if (isNegative(hc1) || isZero(hc1)) {
            isInvalid('#hotelContact1');
            return swal("OOPS!", "Hotel Contact cannot be negative or zero!", "error");

        }else{
             isValid("#hotelContact1");
        }
        if (isEmpty(hc1)) {
            isInvalid('#hotelContact1');
            return swal("OOPS!", "Hotel Contact cannot be empty!", "error");


        }else{
             isValid("#hotelContact1");
        }

        if (hc1.length > 10) {
            isInvalid('#hotelContact1');
            return swal("OOPS!", "Hotel Contact cannot exceed 10 characters!", "error");

        }else{
             isValid("#hotelContact1");
        }
        if (!isContainingNumbers(hc1)) {
            isInvalid('#hotelContact1');
            return swal("OOPS!", "Hotel Contact cannot contain letters!", "error");

        }else{
            isValid("#hotelContact1");
        }


    })
    $(document).on("mouseleave", "#hotelContact2", () => {
        let hc2 = $("#hotelContact2").val();
        if (isNegative(hc2) || isZero(hc2)) {
            isInvalid('#hotelContact2');
            return swal("OOPS!", "Hotel Contact cannot be negative or zero!", "error");

        }else{
             isValid("#hotelContact2");
        }
        if (isEmpty(hc2)) {
            isInvalid('#hotelContact2');
            return swal("OOPS!", "Hotel Contact cannot be empty!", "error");


        }else{
            isValid("#hotelContact2");
        }

        if (hc2.length > 10) {
            isInvalid('#hotelContact2');
            return swal("OOPS!", "Hotel Contact cannot exceed 10 characters!", "error");

        }else{
            isValid("#hotelContact2");

        }
        if (!isContainingNumbers(hc2)) {
            isInvalid('#hotelContact2');
            return swal("OOPS!", "Hotel Contact cannot contain letters!", "error");

        }else{
             isValid("#hotelContact2");
        }


    })





    $(document).on("mouseleave", "#fullBoardWithACLuxuryRoomDouble", () => {
        let o1 = $("#fullBoardWithACLuxuryRoomDouble").val();
        if (isNegative(o1) || isZero(o1)) {
            isInvalid('#fullBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomDouble");
        }
        if (isEmpty(o1)) {
            isInvalid('#fullBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be empty!", "error");


        }else{
            isValid("#fullBoardWithACLuxuryRoomDouble");
        }

        if (o1.length > 6) {
            isInvalid('#fullBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomDouble");
        }
        if (!isContainingNumbers(o1)) {
            isInvalid('#fullBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot contain letters!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomDouble");
        }
        if(!isValidLength(o1.length)){
            isInvalid('#fullBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be less than 5 characters!", "error");


        }else{
            isValid("#fullBoardWithACLuxuryRoomDouble");
        }


    })
    $(document).on("mouseleave", "#halfBoardWithACLuxuryRoomDouble", () => {
        let o2 = $("#halfBoardWithACLuxuryRoomDouble").val();
        if (isNegative(o2) || isZero(o2)) {
            isInvalid('#halfBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomDouble");
        }
        if (isEmpty(o2)) {
            isInvalid('#halfBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be empty!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomDouble");
        }
        if(!isValidLength(o2.length)){
            isInvalid('#halfBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot be less than 5 characters!", "error");

        }else {
             isValid("#halfBoardWithACLuxuryRoomDouble");
        }

        if (o2.length > 6) {
            isInvalid('#halfBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomDouble");
        }
        if (!isContainingNumbers(o2)) {
            isInvalid('#halfBoardWithACLuxuryRoomDouble');
            return swal("OOPS!", "Amount cannot contain letters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomDouble");
        }


    })
    $(document).on("mouseleave", "#fullBoardWithACLuxuryRoomTriple", () => {
        let o4 = $("#fullBoardWithACLuxuryRoomTriple").val();
        if (isNegative(o4) || isZero(o4)) {
            isInvalid('#fullBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomTriple");
        }
        if (isEmpty(o4)) {
           isInvalid('#fullBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be empty!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomTriple");
        }
        if(!isValidLength(o4.length)){
            isInvalid('#fullBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be exceed 5 characters!", "error");

        }else{
             isValid("#fullBoardWithACLuxuryRoomTriple");
        }

        if (o4.length > 6) {
            isInvalid('#fullBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomTriple");
        }
        if (!isContainingNumbers(o4)) {
            isInvalid('#fullBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot contain letters!", "error");


        }else{
             isValid("#fullBoardWithACLuxuryRoomTriple");
        }


    })
    $(document).on("mouseleave", "#halfBoardWithACLuxuryRoomTriple", () => {
        let o3 = $("#halfBoardWithACLuxuryRoomTriple").val();
        if (isNegative(o3) || isZero(parseInt(o3))) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if (isEmpty(o3)) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be empty!", "error");


        }else{
            isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if(!isValidLength(o3.length)){
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be exceed 5 characters!", "error");

        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }


        if (o3.length > 6) {
           isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if (!isContainingNumbers(o3)) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot contain letters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }


    })
    $(document).on("mouseleave", "#cancellationCriteria", () => {
        let cc = $("#cancellationCriteria").val();
        if (isNegative(cc) || isZero(parseInt(cc))) {
            isInvalid('#cancellationCriteria');
          return swal("OOPS!", "Cancellation Criteria be negative or zero!", "error");



        }else{
             isValid("#cancellationCriteria");
        }
        if (isEmpty(cc)) {
            isInvalid('#cancellationCriteria');
            return swal("OOPS!", "Cancellation Criteria cannot be empty!", "error");



        }else{
            isValid("#cancellationCriteria");
        }


        if (cc.length > 30) {
            isInvalid('#cancellationCriteria');
            return swal("OOPS!", "Cancellation Criteria cannot be exceed 30 characters!", "error");



        }else{
             isValid("#cancellationCriteria");
        }



    })
    $(document).on("mouseleave", "#remarks", () => {
        let remarks = $("#remarks").val();
        if (isNegative(remarks) || isZero(parseInt(remarks))) {
            isInvalid('#remarks');
            return swal("OOPS!", "Remarks cannot be negative or zero!", "error");


        }else{
             isValid("#remarks");
        }
        if (isEmpty(remarks)) {
            isInvalid('#remarks');
            return swal("OOPS!", "Remarks cannot be empty!", "error");



        }else{
             isValid("#remarks");
        }

        if(remarks.length > 20){
            isInvalid('#remarks');
            return swal("OOPS!", "Remarks cannot exceed 20 characters!", "error");



        }else{
             isValid("#remarks");
        }

        if (isContainingNumbers(remarks)) {
            isInvalid('#remarks');
            return swal("OOPS!", "Remarks cannot contain numbers!", "error");



        }else{
             isValid("#remarks");
        }


    })
    $(document).on("mouseleave", "#halfBoardWithACLuxuryRoomTriple", () => {
        let o3 = $("#halfBoardWithACLuxuryRoomTriple").val();
        if (isNegative(o3) || isZero(parseInt(o3))) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if (isEmpty(o3)) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be empty!", "error");


        }else{
            isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if(!isValidLength(o3.length)){
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot be exceed 5 characters!", "error");

        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }

        if (o3.length > 6) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }
        if (!isContainingNumbers(o3)) {
            isInvalid('#halfBoardWithACLuxuryRoomTriple');
            return swal("OOPS!", "Amount cannot contain letters!", "error");


        }else{
             isValid("#halfBoardWithACLuxuryRoomTriple");
        }


    })
    $(document).on("mouseleave", "#hotelFee", () => {
        let o5 = $("#hotelFee").val();
        if (isNegative(o5) || isZero(parseInt(o5))) {
            isInvalid('#hotelFee');
            return swal("OOPS!", "Amount cannot be negative or zero!", "error");




        }else{
             isValid("#hotelFee");
        }
        if (isEmpty(o5)) {
            isInvalid('#hotelFee');
            return swal("OOPS!", "Amount cannot be empty!", "error");



        }else{
             isValid("#hotelFee");
        }
        if(!isValidLength(o5.length)){
            isInvalid('#hotelFee');
            return swal("OOPS!", "Amount cannot be exceed 5 characters!", "error");


        }else{
            isValid("#hotelFee");
        }

        if (o5.length > 6) {
            isInvalid('#hotelFee');
            return swal("OOPS!", "Amount cannot exceed 6 characters!", "error");



        }else{
             isValid("#hotelFee");
        }
        if (!isContainingNumbers(o5)) {
            isInvalid('#hotelFee');
            return swal("OOPS!", "Amount cannot contain letters!", "error");



        }else{
             isValid("#hotelFee");
        }


    })
    $(document).on("mouseleave", "#cancellationCriteria", () => {
        let cc = $("#cancellationCriteria").val();
        if (isNegative(cc) || isZero(parseInt(cc))) {
            isInvalid('#cancellationCriteria')
            return swal("OOPS!", "Cancellation Criteria be negative or zero!", "error");



        }else{
            isValid("#cancellationCriteria");
        }
        if (isEmpty(cc)) {
            isInvalid('#cancellationCriteria')
            return swal("OOPS!", "Cancellation Criteria cannot be empty!", "error");



        }else{
             isValid("#cancellationCriteria");
        }


        if (cc.length > 30) {
            isInvalid('#cancellationCriteria')
            return swal("OOPS!", "Cancellation Criteria cannot be exceed 30 characters!", "error");



        }else{
             isValid("#cancellationCriteria");
        }



    })
    $(document).on("mouseleave", "#starRating", () => {
        let sr = $("#starRating").val();
        if (isNegative(sr) || isZero(parseInt(sr))) {

            isInvalid('#starRating');
            return swal("OOPS!", "Star Rating cannot be negative or zero!", "error");






        }else{
             isValid("#starRating");
        }
        if (isEmpty(sr)) {
            isInvalid('#starRating');
            return swal("OOPS!", "Star Rating cannot be empty!", "error");




        }else{
            isValid("#starRating");
        }


        if (sr > 5) {
            isInvalid('#starRating');
            return swal("OOPS!", "Star Rating cannot exceed 5 limit!", "error");




        }else{
             isValid("#starRating");
        }



    })


})

function isValid(id) {
    $(id).css("border", "2px solid green");
    $(id).css("color", "green");

}

function isInvalid(id) {
    $(id).css("border", "2px solid red");
    $(id).css("color", "red");
}
/*Validation - End.*/


$(document).ready(() => {
    $(document).on("click", "#deleteHotel", () => {
        if ($("#hotelId").val() === "") {
            return swal("OOPS!", "Please enter a Hotel name to delete!", "error");
        }

        $.ajax({
            url: "http://localhost:8081/deleteHotel?hotelID=" + $("#hotelId").val(), method: "DELETE", headers: {
                "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
            }, success: (res) => {
                if (res.statusCode === 200 || res.statusCode === 201) {

                    return swal("Done!", res.message, "success");

                }
                console.log(res.data)
                swal("OOPS!", res.message, "error");

            }, error: (xhr, textStatus, errorThrown) => {
                swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
            }


        });


    })


});

$("#tableView").on("click", () => {


    $(".mainContent").css("display", "none");
    if (!isTableVisible) {
        $("body").append("<table data-aos='zoom-in' id='hotelTable' class=\"table table-dark\">\n" + "  <thead>\n" + "    <tr>\n" + "      <th scope=\"col\">Hotel ID.</th>\n" + "      <th scope=\"col\">Package ID.</th>\n" + "      <th scope=\"col\">Hotel Name</th>\n" + "      <th scope=\"col\">Hotel Category.</th>\n" + "      <th scope=\"col\">Hotel Location.</th>\n" + "      <th scope=\"col\">Location (With Coordinates).</th>\n" + "      <th scope=\"col\">Image Location.</th>\n" + "      <th scope=\"col\">Hotel Email.</th>\n" + "      <th scope=\"col\">Hotel Contact 1.</th>\n" + "      <th scope=\"col\">Hotel Contact 2.</th>\n" + "      <th scope=\"col\">Full Board With AC Luxury Room Double.</th>\n" + "      <th scope=\"col\">Half Board With AC Luxury Room Double.</th>\n" + "      <th scope=\"col\">Full Board With AC Luxury Room Triple.</th>\n" + "      <th scope=\"col\">Half Board With AC Luxury Room Triple.</th>\n" + "      <th scope=\"col\">Is Pets Allowed?.</th>\n" + "      <th scope=\"col\">Hotel Fee.</th>\n" + "      <th scope=\"col\">Remarks.</th>\n" + "      <th scope=\"col\">Star Rating.</th>\n" + "    </tr>\n" + "  </thead>\n" + "  <tbody></tbody>" + "</table>");


        isTableVisible = true;
        $("#forms").css("display", "none");
        isFormsVisible = false;
    }


    $.ajax({
        url: "http://localhost:8081/getAllHotels", method: "GET", headers: {
            "Authorization": "Bearer " + JSON.parse(localStorage.getItem("hotelAdminAuthToken"))
        }, success: (res) => {
            console.log(res.statusCode)
            console.log(res.message)
            console.log(res.data)
            if (res.data) {
                return res.data.map((hotel) => {


                    let row = "<tr>\n" + "      <th scope=\"row\">" + hotel.hotelId + "</th>\n" + "      <td>" + hotel.packageId + "</td>\n" + "      <td>" + hotel.hotelName + "</td>\n" + "      <td>" + hotel.hotelCategory + "</td>\n" + "      <td>" + hotel.hotelLocation + "</td>\n" + "      <td>" + hotel.hotelLocationWithCoordinates + "</td>\n" + "      <td>" + hotel.hotelImageLocation + "</td>\n" + "      <td>" + hotel.hotelContactEmail + "</td>\n" + "      <td>" + hotel.hotelContact1 + "</td>\n" + "      <td>" + hotel.hotelContact2 + "</td>\n" + "      <td>" + hotel.fullBoardWithACLuxuryRoomDouble + "</td>\n" + "      <td>" + hotel.halfBoardWithACLuxuryRoomDouble + "</td>\n" + "      <td>" + hotel.fullBoardWithACLuxuryRoomTriple + "</td>\n" + "      <td>" + hotel.halfBoardWithACLuxuryRoomTriple + "</td>\n" + "      <td>" + hotel.petsAllowed + "</td>\n" + "      <td>" + hotel.hotelFee + "</td>\n" + "      <td>" + hotel.remarks + "</td>\n" + "      <td>" + hotel.starRating + "</td>\n" + "    </tr>";


                    $("#hotelTable tbody").append(row);

                })


            }
            return swal("OOPS!", "No Hotels found in DB!", "error");


        }, error: (xhr, textStatus, errorThrown) => {
            swal("OOPS!", "Server threw an exception : " + xhr.responseJSON.message, "error");
        }


    })


});

function setPackageIDs() {
    packageIDs.forEach((pID) => {
        $("#packageId").append("<option value='" + pID + "'>" + pID + "</option>")
    })

}

function setPackageNames() {
    packageNames.forEach((pName) => {
        $("#hotelCategory").append("<option value='" + pName + "'>" + pName + "</option>")


    })


}

function getIndex(packageName) {
    var i = '';

    packageNames.map((pName, index) => {
        console.log("P name : " + pName)
        if (packageName === pName) {
            i = index;

        }

    })
    return i;

}




function getCoordinates() {
    axios.get("https://geocode.maps.co/search?q=" + $("#hotelName").val())
        .then((res) => {

            $("#hotelLocationWithCoordinates").val("Latitude : " + res.data[0].lat + ', Longitude : ' + res.data[0].lon)


        })
        .catch((err) => {
            console.log(err)
            swal("OOPS! ", "Coordinates Cannot be found!", "error");


        })


}